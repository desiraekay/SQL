#Here, I have answered some example questions working with a dataset called chinook, which represents a digital media store. The database includes tables for artists, albums, media tracks, media types, genres, playlists, invoices, customers and employees. 
#After answering the example questions (#1-14) I then came up with a few more questions on my own (#15-20).


#1. 
--Show Customers (their full names, customer ID, and country) who are not in the US.
SELECT firstname, lastname, customerid, country FROM customers
WHERE country != 'USA';


#2.
--Show only the Customers from Brazil.
SELECT firstname, lastname, customerid, country FROM customers
WHERE country = 'Brazil';


#3.
--Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
SELECT c.firstname, c.lastname, i.invoiceid, i.invoicedate, i.billingcountry 
FROM customers c JOIN invoices i
ON c.customerid = i.customerid
WHERE c.country = 'Brazil';


#4.
--Show the Employees who are Sales Agents.
SELECT employeeid, lastname, firstname, title FROM employees
WHERE title LIKE '%Sales%Agent%';


#5.
--Find a unique/distinct list of billing countries from the Invoice table.
SELECT DISTINCT billingcountry FROM invoices
ORDER BY billingcountry;


#6.
--Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.
SELECT i.invoiceid, e.lastname AS sales_rep_last_name, e.firstname AS sales_rep_first_name, e.employeeid, c.supportrepid, i.customerid FROM employees e 
JOIN customers c ON e.employeeid = c.supportrepid 
JOIN invoices i ON c.customerid = i.customerid
ORDER BY invoiceid asc;


#7.
--Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT i.total, c.lastname AS customer_last_name, c.firstname AS customer_first_name, c.country, c.supportrepid, e.employeeid, e.lastname AS sales_rep_last_name, e.firstname AS sales_rep_first_name FROM employees e 
JOIN customers c ON e.employeeid = c.supportrepid 
JOIN invoices i ON c.customerid = i.customerid
ORDER BY total desc;


#8.
--How many Invoices were there in 2009?
SELECT COUNT(*) FROM invoices
WHERE invoicedate BETWEEN '2009-01-01' AND '2009-12-31';


#9.
--What are the total sales for 2009?
SELECT SUM(total) FROM invoices
WHERE invoicedate LIKE '2009%';


#10.
--Write a query that includes the purchased track name with each invoice line ID.
SELECT i.invoicelineid, t.name AS track_name FROM invoice_items i JOIN tracks t
ON i.trackid = t.trackid
ORDER BY invoicelineid;


#11.
--Write a query that includes the purchased track name AND artist name with each invoice line ID.
SELECT t.name AS track_name, ar.name AS artist, i.invoicelineid FROM invoice_items i 
LEFT JOIN tracks t ON i.trackid = t.trackid
LEFT JOIN albums al ON t.albumid = al.albumid
LEFT JOIN artists ar ON al.artistid = ar.artistid
ORDER BY ar.name;


#12.
--Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
SELECT t.name AS track_name, a.title AS album_name, m.name AS media_type, g.name AS genre FROM tracks t
LEFT JOIN albums a ON t.albumid = a.albumid
LEFT JOIN media_types m ON t.mediatypeid = m.mediatypeid
LEFT JOIN genres g ON  t.genreid = g.genreid
ORDER BY media_type;


#13.
--Show the total sales made by each sales agent.
SELECT e.employeeid, e.lastname AS sales_rep_last_name, e.firstname AS sales_rep_first_name, ROUND(SUM(i.total), 2) AS total_sales FROM employees e 
JOIN customers c ON e.employeeid = c.supportrepid 
JOIN invoices i ON c.customerid = i.customerid
GROUP BY employeeid ORDER BY total_sales desc;


#14.
--Which sales agent made the most dollars in sales in 2009?
SELECT e.employeeid, e.lastname AS sales_rep_last_name, e.firstname AS sales_rep_first_name, ROUND(SUM(i.total), 2) AS total_sales FROM employees e 
JOIN customers c ON e.employeeid = c.supportrepid 
JOIN invoices i ON c.customerid = i.customerid
WHERE invoicedate LIKE '2009%'
GROUP BY employeeid ORDER BY total_sales desc
LIMIT 1;


#15.
--Find the top 5 selling artists.
SELECT ar.name AS artist, COUNT(invoiceid) AS times_purchased FROM invoice_items i
JOIN tracks t ON i.trackid = t.trackid
JOIN albums al ON t.albumid = al.albumid
JOIN artists ar ON al.artistid = ar.artistid
GROUP BY artist ORDER BY COUNT(invoiceid) DESC
LIMIT 5;


#16.
--Find the top 5 most purchased tracks and their media type.
SELECT t.name AS track_name, m.name AS media_type, COUNT(invoiceid) AS times_purchased FROM invoice_items i
JOIN tracks t ON i.trackid = t.trackid
JOIN media_types m ON t.mediatypeid = m.mediatypeid
GROUP BY track_name ORDER BY COUNT(invoiceid) DESC
LIMIT 5;


#17.
--Which playlist is the most popular?
SELECT p.playlistid, p.name AS playlist,COUNT(invoiceid) AS times_purchased FROM invoice_items i
JOIN tracks t ON i.trackid = t.trackid
JOIN playlist_track pt ON t.trackid = pt.trackid
JOIN playlists p ON pt.playlistid = p.playlistid
GROUP BY p.playlistid ORDER BY times_purchased DESC
LIMIT 1;


#18.
--What are the top 3 countries with the most sales in the year 2013?
SELECT ROUND(SUM(total), 2) AS total_sales, billingcountry AS country FROM invoices
WHERE invoicedate LIKE '2013%'
GROUP BY billingcountry ORDER BY total_sales desc
LIMIT 3;


#19.
--What is the full name and address of the most frequent buyer?
SELECT i.customerid, COUNT(i.invoiceid) AS orders_placed, c.firstname, c.lastname, c.address, c.city, c.state, c.postalcode, c.country FROM customers c
JOIN invoices i ON c.customerid = i.customerid
GROUP BY i.customerid ORDER BY orders_placed DESC 
LIMIT 1;


#20.
--What is the full name of the buyer who spent the most money on their purchases overall? How much have they spent?
SELECT i.customerid, c.firstname, c.lastname, ROUND(SUM(i.total), 2) AS amount_spent FROM customers c
JOIN invoices i ON c.customerid = i.customerid
GROUP BY i.customerid ORDER BY amount_spent DESC
LIMIT 1;
